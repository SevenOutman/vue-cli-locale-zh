{
  "org": {
    "vue": {
      "components": {
        "connection-status": {
          "disconnected": "连接已断开",
          "connected": "已连接 Vue 项目管理器!"
        },
        "file-diff": {
          "binary": "二进制文件",
          "actions": {
            "open": "在编辑器中打开"
          }
        },
        "file-diff-view": {
          "files-changed": "文件改动",
          "search-file": "搜索文件",
          "empty": "没有改动",
          "error": "无法获取改动",
          "modals": {
            "commit": {
              "title": "提交信息",
              "input": "输入提交信息",
              "subtitle": "记录下做了哪些改动",
              "actions": {
                "commit": "提交",
                "cancel": "取消"
              }
            }
          },
          "actions": {
            "collapse-all": "折叠全部",
            "expand-all": "展开全部",
            "commit": "提交修改",
            "skip": "跳过",
            "continue": "继续",
            "refresh": "刷新"
          }
        },
        "folder-explorer": {
          "toolbar": {
            "tooltips": {
              "parent-folder": "上一层",
              "edit-path": "编辑路径",
              "favorite": "添加/取消收藏",
              "favorite-folders": "收藏的文件夹",
              "refresh": "刷新"
            },
            "placeholder": "输入文件夹完整路径",
            "empty": "暂无收藏",
            "show-hidden": "显示隐藏文件夹"
          },
          "new-folder": {
            "action": "新建文件夹",
            "title": "新建文件夹",
            "field": {
              "title": "文件夹名",
              "subtitle": "你可以使用路径分隔符来创建嵌套的文件夹"
            },
            "cancel": "取消",
            "create": "创建"
          }
        },
        "list-item-info": {
          "more-info": "查看详情"
        },
        "logger-view": {
          "title": "日志",
          "empty": "暂无日志",
          "buttons": {
            "clear": "清空日志",
            "scroll": "至底部",
            "close": "关闭"
          }
        },
        "progress-screen": {
          "close": "关闭"
        },
        "project-nav": {
          "tooltips": {
            "plugins": "插件",
            "dependencies": "依赖",
            "configuration": "配置",
            "tasks": "任务",
            "more": "更多"
          }
        },
        "project-select-list": {
          "empty": "没有项目",
          "titles": {
            "favorite": "收藏的项目",
            "other": "更多项目"
          }
        },
        "project-select-list-item": {
          "tooltips": {
            "favorite": "添加/取消收藏",
            "delete": "删除",
            "open-in-editor": "在编辑器中打开"
          }
        },
        "project-plugin-item": {
          "version": "版本",
          "latest": "最新",
          "official": "官方",
          "installed": "已安装",
          "actions": {
            "update": "更新 {target}"
          }
        },
        "project-dependency-item": {
          "version": "版本",
          "wanted": "要求",
          "latest": "最新",
          "installed": "已安装",
          "actions": {
            "update": "更新 {target}",
            "uninstall": "卸载 {target}"
          }
        },
        "project-tasks-dropdown": {
          "tooltips": {
            "tasks": "任务",
            "running-tasks": "{count} 个正在运行"
          }
        },
        "prompt-list": {
          "default": "默认"
        },
        "prompts-list": {
          "empty": "（暂无配置）"
        },
        "status-bar": {
          "project": {
            "tooltip": "当前项目<br><i>点击进入项目／回到首页</i>",
            "empty": "（无当前项目）"
          },
          "path": {
            "tooltip": "当前目录"
          },
          "log": {
            "tooltip": "日志<br><i>点击显示／隐藏 Vue CLI 日志</i>",
            "empty": "（暂无日志）"
          },
          "report-bug": "反馈 bug",
          "translate": "参与翻译",
          "dark-mode": "夜间模式",
          "reset-plugin-api": "重置插件 API"
        },
        "suggestion-bar": {
          "suggestion": "建议",
          "modal": {
            "cancel": "取消",
            "continue": "继续"
          }
        },
        "terminal-view": {
          "buttons": {
            "clear": "清空",
            "scroll": "至底部"
          }
        },
        "top-bar": {
          "no-favorites": "暂无收藏",
          "favorite-projects": "收藏的项目",
          "recent-projects": "最近使用",
          "homepage": "首页"
        },
        "view-badge": {
          "labels": {
            "tasks": {
              "error": "错误",
              "running": "运行中",
              "done": "已完成"
            }
          }
        }
      },
      "mixins": {
        "progress": {
          "creating": "正在创建项目...",
          "git-init": "初始化 Git 仓库...",
          "plugins-install": "正在安装 Vue CLI 插件. 这需要一点时间...",
          "invoking-generators": "正在生成项目...",
          "deps-install": "正在安装依赖...",
          "completion-hooks": "即将完成...",
          "fetch-remote-preset": "拉取远程预设...",
          "done": "项目创建成功",
          "plugin-install": "正在安装 {arg0}...",
          "plugin-uninstall": "正在卸载 {arg0}...",
          "plugin-invoke": "正在调用 {arg0}...",
          "plugin-update": "正在更新 {arg0}...",
          "plugins-update": "正在更新 {arg0} 个插件...",
          "dependency-install": "正在安装 {arg0}...",
          "dependency-uninstall": "正在卸载 {arg0}...",
          "dependency-update": "正在更新 {arg0}...",
          "dependencies-update": "正在更新 {arg0} 个依赖项..."
        }
      },
      "types": {
        "task": {
          "status": {
            "idle": "空闲",
            "running": "运行中",
            "done": "已完成",
            "error": "错误",
            "terminated": "已中止"
          }
        }
      },
      "views": {
        "project-select": {
          "title": "Vue 项目管理器",
          "tabs": {
            "projects": "项目",
            "create": "创建",
            "import": "导入"
          },
          "buttons": {
            "create": "在此创建新项目",
            "import": "导入这个文件夹"
          },
          "import": {
            "no-modules": {
              "title": "Missing modules",
              "message": "It seems the project is missing the 'node_modules' folder. Please check you installed the dependencies before importing.",
              "close": "Got it"
            }
          }
        },
        "project-create": {
          "title": "创建新项目",
          "tabs": {
            "details": {
              "title": "详情",
              "form": {
                "folder": {
                  "label": "项目文件夹",
                  "placeholder": "my-app",
                  "tooltip": "修改项目路径",
                  "action": "选定",
                  "folder-exists": "文件夹已存在",
                  "folder-name-invalid": "无效的文件夹名"
                },
                "manager": {
                  "label": "包管理器",
                  "default": "默认"
                },
                "options": {
                  "label": "更多选项",
                  "force": "若目标文件夹已存在则将其覆盖",
                  "git-title": "Git",
                  "git": "初始化 git 仓库 (建议)",
                  "git-commit-message": "初始提交信息 (选填)"
                }
              },
              "buttons": {
                "cancel": "取消",
                "next": "下一步"
              },
              "modal": {
                "title": "取消创建项目",
                "body": "确定要取消创建吗？",
                "buttons": {
                  "back": "不",
                  "clear": "取消创建"
                }
              }
            },
            "presets": {
              "title": "预设",
              "description": "预设就是一套定义好的插件和配置。 你也可以将自己的配置保存成预设，方便以后创建项目使用。",
              "select": "选择一套预设",
              "buttons": {
                "previous": "上一步",
                "next": "下一步",
                "create": "创建项目"
              },
              "modal": {
                "title": "配置远程预设",
                "body": "敬请期待…"
              },
              "manual": {
                "name": "手动",
                "description": "手动配置项目"
              },
              "remote": {
                "name": "远程预设",
                "description": "从 git 仓库拉取预设",
                "url": {
                  "title": "URL",
                  "subtitle": "Git 仓库地址, 如 'username/repo'. 可以使用前缀如 'gitlab:' 或 'bitbucket:'."
                },
                "options": "选项",
                "clone": "这是私有仓库",
                "cancel": "取消",
                "done": "完成"
              },
              "default-preset": "默认"
            },
            "features": {
              "title": "功能",
              "description": "在项目创建之后，你仍然可以通过安装插件来增加功能。",
              "enable": "选择功能",
              "buttons": {
                "previous": "上一步",
                "next": "下一步",
                "create": "创建项目"
              },
              "userConfigFiles": {
                "name": "使用配置文件",
                "description": "将插件的配置保存在各自的配置文件 (比如 '.babelrc') 中。"
              }
            },
            "configuration": {
              "title": "配置",
              "buttons": {
                "previous": "上一步",
                "create": "创建项目"
              },
              "modal": {
                "title": "保存为新预设",
                "body": {
                  "title": "预设名",
                  "subtitle": "将功能和配置保存为一套新的预设"
                },
                "buttons": {
                  "cancel": "取消",
                  "continue": "创建项目，不保存预设",
                  "create": "保存预设并创建项目"
                }
              }
            }
          }
        },
        "project-plugins": {
          "title": "插件",
          "button": "添加插件",
          "heading": "已安装的插件",
          "update-all": "更新所有插件"
        },
        "project-plugins-add": {
          "title": "添加插件",
          "plugin": "插件",
          "tabs": {
            "search": {
              "label": "所有插件",
              "search-input": "查找插件",
              "not-found": "未找到相关插件",
              "buttons": {
                "cancel": "取消",
                "install": "安装 {target}",
                "default-install": "Install"
              }
            },
            "configuration": {
              "label": "配置插件",
              "heading": "安装 {target}",
              "buttons": {
                "cancel": "取消",
                "finish": "完成安装"
              }
            },
            "diff": {
              "label": "文件改动"
            }
          },
          "modal": {
            "title": "卸载 {target}？",
            "body": "确认卸载插件 {target} 吗？",
            "buttons": {
              "back": "不",
              "cancel": "Cancel without uninstalling",
              "uninstall": "卸载"
            }
          }
        },
        "project-configurations": {
          "title": "项目配置"
        },
        "project-configuration-details": {
          "actions": {
            "cancel": "取消修改",
            "save": "保存修改",
            "more-info": "更多信息",
            "refresh": "刷新"
          }
        },
        "project-tasks": {
          "title": "任务"
        },
        "project-task-details": {
          "actions": {
            "play": "运行",
            "stop": "停止",
            "close": "关闭",
            "save": " 保存"
          },
          "command": "脚本命令",
          "parameters": "变量",
          "more-info": "查看详情",
          "output": "输出"
        },
        "project-dependencies": {
          "title": "项目依赖",
          "heading": {
            "dependencies": "运行依赖",
            "devDependencies": "开发依赖"
          },
          "actions": {
            "install": "安装依赖",
            "update-all": "更新所有依赖"
          },
          "install": {
            "title": "安装新的依赖"
          },
          "uninstall": {
            "title": "确认卸载",
            "body": "确认卸载 {id}?",
            "cancel": "取消",
            "uninstall": "卸载 {id}"
          }
        },
        "about": {
          "title": "关于",
          "description": "<a href=\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-ui\" target=\"_blank\">@vue/cli-ui</a> is a built-in package of vue-cli which opens a full-blown UI.",
          "quote": "Vue-cli 3.x is a complete rewrite, with a lot of new awesome features. You will be to select features like routing, Vuex or Typescript, then add and upgrade building blocks called \"vue-cli plugins\". But having so much more options also means the tool is now more complex and harder to start using. That's why we thought having a full-blown GUI would help discover the new features, search and install vue-cli plugins and unlock more possibilities overall while not being limited by a terminal interface. To sum up, vue-cli will not only allow you to bootstrap a new project easily, but it will also remain useful for ongoing work afterwards!",
          "links": "资源链接",
          "back": "返回"
        }
      },
      "cli-service": {
        "suggestions": {
          "vue-router-add": {
            "label": "添加 vue-router",
            "message": "Official library to support multiple virtual pages in a Single-Page App. Each route renders a different component."
          },
          "vuex-add": {
            "label": "添加 vuex",
            "message": "Official centralized State Management solution for large-scale apps. Very useful if multiple components need to access the same data."
          },
          "vue-devtools": {
            "label": "安装 devtools",
            "message": "Browser devtools official extension for debugging Vue.js applications where you can inspect your components, vuex store and events."
          },
          "progress": "正在安装 {arg0}..."
        }
      },
      "vue-webpack": {
        "dashboard": {
          "title": "控制台",
          "open-app": "启动 app",
          "webpack-status": {
            "Success": "编译成功",
            "Failed": "编译失败",
            "Compiling": "编译中",
            "Invalidated": "Invalidated",
            "Idle": "空闲"
          },
          "build-status": {
            "labels": {
              "status": "状态",
              "errors": "错误",
              "warnings": "警告",
              "assets": "Assets",
              "modules": "Modules",
              "deps": "依赖项"
            }
          },
          "speed-stats": {
            "title": "速度统计"
          },
          "module-list": {
            "title": "依赖项"
          },
          "asset-list": {
            "title": "资源",
            "size-warning": "This asset is big, consider using Code splitting to create smaller assets."
          }
        },
        "analyzer": {
          "title": "分析",
          "go-up": "上一层",
          "go-home": "主目录",
          "chunk": "Chunk"
        },
        "sizes": {
          "stats": "Stats",
          "parsed": "Parsed",
          "gzip": "Gzip",
          "help": "<b>Stats:</b> size from webpack stats data.<br><b>Parsed:</b> size from extracted source (after minification plugins). More accurate.<br><b>Gzip:</b> size of gzipped extracted source."
        },
        "modern-mode": "Show modern build",
        "tasks": {
          "serve": {
            "description": "编译和热更新（用于开发环境）",
            "open": "在浏览器中启动",
            "mode": "环境",
            "host": "域名",
            "port": "端口",
            "https": "启用 HTTPS"
          },
          "build": {
            "description": "编译并压缩（用于生产环境）",
            "mode": "环境",
            "dest": "输出目录",
            "target": {
              "description": "构建类型",
              "app": "App",
              "lib": "库",
              "wc": "组件",
              "wc-async": "异步组件"
            },
            "name": "库名/组件名 (默认为 package.json 的 name 或 entry 文件名)",
            "watch": "监听变化",
            "modern": {
              "label": "Modern mode",
              "description": "Build app targeting modern browsers with auto fallback"
            }
          },
          "inspect": {
            "description": "检查 webpack 配置",
            "mode": "环境",
            "verbose": "完整显示函数定义"
          }
        },
        "config": {
          "vue-cli": {
            "description": "配置 Vue 项目",
            "groups": {
              "general": "基础设置",
              "css": "CSS 设置"
            },
            "baseUrl": {
              "label": "Base URL",
              "description": "The base URL your application will be deployed at, for example '/my-app/'. Use an empty string ('') so that all assets are linked using relative paths."
            },
            "outputDir": {
              "label": "Output directory",
              "description": "The directory where the production build files will be generated"
            },
            "assetsDir": {
              "label": "Assets directory",
              "description": "A directory to nest generated static assets (js, css, img, fonts) under."
            },
            "runtimeCompiler": {
              "label": "Enable runtime compiler",
              "description": "This will allow you to use the template option in Vue components, but will incur around an extra 10kb payload for your app."
            },
            "productionSourceMap": {
              "label": "Enable Production Source Maps",
              "description": "Disabling this can speed up production builds if you don't need source maps for production"
            },
            "parallel": {
              "label": "Parallel compilation",
              "description": "Whether to use multiple processors to compile Babel or Typescript."
            },
            "css": {
              "modules": {
                "label": "Enable CSS Modules",
                "description": "By default, only files that ends in *.module.[ext] are treated as CSS modules. Enabling this will treat all style files as CSS modules."
              },
              "extract": {
                "label": "Extract CSS",
                "description": "Whether to extract CSS in your components into a standalone CSS files (instead of inlined in JavaScript and injected dynamically)."
              },
              "sourceMap": {
                "label": "Enable CSS Source Maps",
                "description": "Whether to enable source maps for CSS. Enabling this may affect build performance."
              }
            }
          }
        },
        "suggestions": {
          "vue-config-open": "Open vue config"
        }
      },
      "eslint": {
        "config": {
          "eslint": {
            "description": "代码质量和纠错",
            "groups": {
              "strongly-recommended": "强烈推荐",
              "recommended": "推荐"
            },
            "vue": {
              "label": "Vue"
            },
            "extra": {
              "label": "更多设置",
              "lintOnSave": {
                "message": "Lint on save",
                "description": "每当源文件保存时自动检查"
              }
            }
          }
        },
        "tasks": {
          "lint": {
            "description": "检查并修复源文件",
            "noFix": "仅检查，不要自动修复错误"
          }
        },
        "suggestions": {
          "open-eslintrc": {
            "label": "打开 eslintrc"
          }
        }
      },
      "pwa": {
        "config": {
          "pwa": {
            "description": "Progressive Web App",
            "workboxPluginMode": {
              "message": "Plugin mode",
              "description": "用于配置 `workbox-webpack-plugin`"
            },
            "name": {
              "message": "App 名",
              "description": "用于启动页显示、 `apple-mobile-web-app-title` 等处"
            },
            "themeColor": {
              "message": "主题色",
              "description": "显示在浏览器中的主题色"
            },
            "backgroundColor": {
              "message": "启动页背景色",
              "description": "启动页（闪屏页）背景色"
            },
            "msTileColor": {
              "message": "Windows 磁贴颜色",
              "description": "Windows 磁贴颜色"
            },
            "appleMobileWebAppStatusBarStyle": {
              "message": "Apple 状态栏样式",
              "description": "iOS webapp 状态栏样式"
            }
          }
        },
        "suggestions": {
          "open-vue": {
            "label": "Open vue config"
          },
          "open-manifest": {
            "label": "Open manifest"
          }
        }
      },
      "cypress": {
        "tasks": {
          "test": {
            "description": "使用 `cypress run` 运行 e2e 测试",
            "headless": "不显示 GUI",
            "mode": "环境",
            "url": "远程测试 URL"
          }
        }
      },
      "nightwatch": {
        "tasks": {
          "test": {
            "description": "使用 nightwatch 运行 e2e 测试",
            "url": "远程测试 URL",
            "config": "Use custom nightwatch config file (overrides internals)",
            "env": "Comma-delimited browser envs to run in"
          }
        }
      },
      "jest": {
        "tasks": {
          "test": {
            "description": "Run unit tests with Jest",
            "watch": "Watch files for changes and rerun tests related to changed files",
            "notify": "Display a notification after each run",
            "update": "Re-record every snapshot that fails during this test run"
          }
        }
      },
      "mocha": {
        "tasks": {
          "test": {
            "description": "Run unit tests with Mocha",
            "watch": "Watch files for changes and rerun tests related to changed files"
          }
        }
      }
    }
  }
}
